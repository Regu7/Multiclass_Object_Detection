name: Deploy to ECR and ECS

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY}}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: object_detection_repo
        IMAGE_TAG: object_detection
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition obj_det_task \
        --query taskDefinition > task-definition.json

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: object_detection_app
        image: ${{ steps.login-ecr.outputs.registry }}/object_detection_repo:object_detection

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        cluster: default
        wait-for-service-stability: false

    - name: Run ECS Task
      run: |
        aws ecs run-task \
          --cluster default \
          --task-definition ${{ steps.task-def.outputs.task-definition }} \
          --launch-type EC2
